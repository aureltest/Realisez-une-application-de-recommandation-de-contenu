name: Build and deploy Python project to Azure Function App - serverlessrecommander

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: 'serverless-api/'
  PYTHON_VERSION: '3.10'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python version
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: |
          pip install --target="${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/.python_packages/lib/site-packages" -r ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/requirements.txt

      - name: Verify scipy installation
        run: |
            python -c "import sys; sys.path.append('${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/.python_packages/lib/site-packages'); import scipy; print(scipy.__version__)"

      # Ajout d'une étape pour lister le contenu du répertoire
      - name: List directory contents
        run: ls -R ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}

      - name: Zip artifact for deployment
        run: |
          cd ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          zip ../release.zip .python_packages ./* -r

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-function.outputs.webapp-url }}
    permissions:
      id-token: write
      contents: read
      issues: write

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      # Ajout d'une étape pour lister le contenu après décompression
      - name: List deployed contents
        run: ls -R

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_C3A0986BE2274A7988502103765C3D5B }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_6207FB9604154807BD431485BC591170 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_5C9467BC8DAA40DD8706B7C0533FDC2C }}

      - name: 'Deploy to Azure Functions'
        uses: Azure/functions-action@v1
        id: deploy-to-function
        with:
          app-name: 'serverlessrecommander'
          slot-name: 'Production'
          package: 'release.zip'
          scm-do-build-during-deployment: true
          enable-oryx-build: true
          